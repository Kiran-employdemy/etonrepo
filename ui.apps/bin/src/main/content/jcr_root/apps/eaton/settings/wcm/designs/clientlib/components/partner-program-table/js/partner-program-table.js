/**
 *
 *
 *
 * - THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY -
 * - Generated by Gulp (gulp-babel).
 *
 *
 *
 *
 */


'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* jshint esversion: 6 */

var PartnerProgramTable = function () {
  function PartnerProgramTable() {
    _classCallCheck(this, PartnerProgramTable);

    this.partnerProgramTableEle = document.querySelector('.partner-program-table table');
    this.wcmEditMode = document.querySelector('.partner-program-table.wcm-edit-mode');
    this.ajaxUrl = '';
  }

  _createClass(PartnerProgramTable, [{
    key: 'init',
    value: function init() {
      if (this.partnerProgramTableEle && !this.wcmEditMode) {
        // Get partner program data when the partner program table is present and not in edit mode
        this.ajaxUrl = this.partnerProgramTableEle.dataset.resource + '.nocache.json';
        this.getData();
      }
    }

    /**
     * Calls the partner program lookup servlet
     * response data of successful calls is added to the partner program table
     * when call fails, the accordion above the partner program table is hidden and error is logged
     */

  }, {
    key: 'getData',
    value: function getData() {

      var self = this;

      $.ajax({
        type: 'GET',
        url: this.ajaxUrl,
        cache: false,
        headers: { 'Content-Type': 'application/json' },
        success: self.handleSuccess,
        error: self.handleError
      });
    }

    /**
     * Add partner program data to table
     * @param response
     */

  }, {
    key: 'handleSuccess',
    value: function handleSuccess(response) {

      if (response.data) {
        var data = response.data;
        for (var i = 0; i < data.length; i++) {

          var item = data[i];

          var newRow = document.createElement('tr');
          var newProgramNameCell = document.createElement('td');

          if (item.includes('|')) {

            var programName = data[i].split('|')[0];

            if (programName) {
              newProgramNameCell.textContent = programName;
              newRow.appendChild(newProgramNameCell);

              var tierLevel = data[i].split('|')[1];

              if (tierLevel) {

                var newTierLevelCell = document.createElement('td');
                newTierLevelCell.textContent = tierLevel;
                newRow.appendChild(newTierLevelCell);
              }
            }
          } else {

            newProgramNameCell.textContent = data[i];
            newRow.appendChild(newProgramNameCell);
            var newBlankTierLevelCell = document.createElement('td');
            newRow.appendChild(newBlankTierLevelCell);
          }

          document.querySelector('.partner-program-table table tbody').appendChild(newRow);
        }
      }
    }

    /**
     * Upon error to servlet
     * Hide the accordion element with a descendant partner program table element
     */

  }, {
    key: 'handleError',
    value: function handleError() {
      document.querySelector('.partner-program-table table tbody').closest('.accordion-component').style.display = 'none';
    }
  }]);

  return PartnerProgramTable;
}();

document.addEventListener('DOMContentLoaded', function () {

  var partnerProgramTable = new PartnerProgramTable();
  partnerProgramTable.init();
});

if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
  // eslint-disable-next-line no-global-assign
  $ = require('jquery');

  module.exports = PartnerProgramTable;
}