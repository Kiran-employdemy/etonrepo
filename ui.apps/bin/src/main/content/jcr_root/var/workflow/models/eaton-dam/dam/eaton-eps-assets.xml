<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" xmlns:cq="http://www.day.com/jcr/cq/1.0" xmlns:jcr="http://www.jcp.org/jcr/1.0" xmlns:nt="http://www.jcp.org/jcr/nt/1.0"
    jcr:isCheckedOut="{Boolean}false"
    jcr:primaryType="cq:WorkflowModel"
    jcr:uuid="2a1761b4-da2d-4620-a610-9096c71f7596"
    sling:resourceType="cq/workflow/components/model"
    description="No Description"
    title="Eaton EPS Assets">
    <metaData
        cq:generatingPage="/conf/global/settings/workflow/models/eaton-dam/dam/eaton-eps-assets/jcr:content"
        cq:lastModified="{Long}1647619918841"
        cq:lastModifiedBy="admin"
        jcr:primaryType="nt:unstructured"/>
    <nodes jcr:primaryType="nt:unstructured">
        <node0
            jcr:primaryType="cq:WorkflowNode"
            title="Start"
            type="START">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node0>
        <node1
            jcr:primaryType="cq:WorkflowNode"
            title="Density Decider"
            type="PROCESS">
            <metaData
                jcr:primaryType="nt:unstructured"
                PROCESS="com.eaton.platform.core.workflows.EPSDensityDecider"
                PROCESS_AUTO_ADVANCE="true"/>
        </node1>
        <node2
            jcr:primaryType="cq:WorkflowNode"
            title="OR_SPLIT"
            type="OR_SPLIT">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node2>
        <node3
            jcr:primaryType="cq:WorkflowNode"
            title="OR_JOIN"
            type="OR_JOIN">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node3>
        <node4
            jcr:primaryType="cq:WorkflowNode"
            description="A no operation process"
            title="1000 Density EPS"
            type="PROCESS">
            <metaData
                jcr:primaryType="nt:unstructured"
                PROCESS="/libs/workflow/scripts/noop.ecma"
                PROCESS_AUTO_ADVANCE="true"/>
        </node4>
        <node5
            jcr:primaryType="cq:WorkflowNode"
            description="Generate renditions for eps files using image magick."
            title="Generate 1000 Density Vector EPS Renditions"
            type="PROCESS">
            <metaData
                jcr:primaryType="nt:unstructured"
                COMMANDS="[convert -density 1000x1000 -define jpeg:size=580x580 ${filename}[0] -colorspace CMYK -resize 580x580 -flatten cq5dam.thumbnail.580.580.jpg,convert -density 1000x1000 -define jpeg:size=2400x2400 ${filename}[0] -colorspace CMYK -resize 2400x2400 -gravity center -extent 2400x2400 -flatten cq5dam.thumbnail.2400.2400.jpg,convert -density 1000x1000 -define jpeg:size=300x300 ${filename}[0] -colorspace CMYK -resize 300x300 -flatten cq5dam.thumbnail.300.300.jpg,convert -density 1000x1000 -define jpeg:size=60x60 ${filename}[0] -colorspace CMYK -resize 60x60 -flatten cq5dam.thumbnail.60.60.jpg,convert -density 1000x1000 -define jpeg:size=25x25 ${filename}[0] -colorspace CMYK -resize 25x25 -flatten cq5dam.thumbnail.25.25.jpg,convert -density 1000x1000 -define jpeg:size=96x96 ${filename}[0] -colorspace CMYK -resize 96x96 -flatten cq5dam.thumbnail.96.96.jpg,convert -density 1000x1000 -define jpeg:size=600x600 ${filename}[0] -colorspace CMYK -resize 600x600 -flatten cq5dam.thumbnail.600.600.tif]"
                MIME_TYPES="[image/eps,image/x-eps,application/postscript,application/eps,application/x-eps]"
                PROCESS="com.day.cq.dam.core.process.CommandLineProcess"
                PROCESS_AUTO_ADVANCE="true"/>
        </node5>
        <node6
            jcr:primaryType="cq:WorkflowNode"
            description="A no operation process"
            title="300 Density EPS"
            type="PROCESS">
            <metaData
                jcr:primaryType="nt:unstructured"
                PROCESS="/libs/workflow/scripts/noop.ecma"
                PROCESS_AUTO_ADVANCE="true"/>
        </node6>
        <node7
            jcr:primaryType="cq:WorkflowNode"
            description="Generate renditions for eps files using image magick."
            title="Generate 300 Density Vector EPS Renditions"
            type="PROCESS">
            <metaData
                jcr:primaryType="nt:unstructured"
                COMMANDS="[convert -density 300x300 -define jpeg:size=580x580 ${filename}[0] -colorspace CMYK -resize 580x580 -flatten cq5dam.thumbnail.580.580.jpg,convert -density 300x300 -define jpeg:size=2400x2400 ${filename}[0] -colorspace CMYK -resize 2400x2400 -gravity center -extent 2400x2400 -flatten cq5dam.thumbnail.2400.2400.jpg,convert -density 300x300 -define jpeg:size=300x300 ${filename}[0] -colorspace CMYK -resize 300x300 -flatten cq5dam.thumbnail.300.300.jpg,convert -density 300x300 -define jpeg:size=60x60 ${filename}[0] -colorspace CMYK -resize 60x60 -flatten cq5dam.thumbnail.60.60.jpg,convert -density 300x300 -define jpeg:size=25x25 ${filename}[0] -colorspace CMYK -resize 25x25 -flatten cq5dam.thumbnail.25.25.jpg,convert -density 300x300 -define jpeg:size=96x96 ${filename}[0] -colorspace CMYK -resize 96x96 -flatten cq5dam.thumbnail.96.96.jpg,convert -density 300x300 -define jpeg:size=600x600 ${filename}[0] -colorspace CMYK -resize 600x600 -flatten cq5dam.thumbnail.600.600.tif]"
                MIME_TYPES="[image/eps,image/x-eps,application/postscript,application/eps,application/x-eps]"
                PROCESS="com.day.cq.dam.core.process.CommandLineProcess"
                PROCESS_AUTO_ADVANCE="true"/>
        </node7>
        <node8
            jcr:primaryType="cq:WorkflowNode"
            description="A no operation process"
            title="Skip EPS Custom Renditions"
            type="PROCESS">
            <metaData
                jcr:primaryType="nt:unstructured"
                PROCESS="/libs/workflow/scripts/noop.ecma"
                PROCESS_AUTO_ADVANCE="true"/>
        </node8>
        <node9
            jcr:primaryType="cq:WorkflowNode"
            title="End"
            type="END">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node9>
    </nodes>
    <transitions jcr:primaryType="nt:unstructured">
        <node0_x0023_node1
            jcr:primaryType="cq:WorkflowTransition"
            from="node0"
            rule=""
            to="node1">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node0_x0023_node1>
        <node1_x0023_node2
            jcr:primaryType="cq:WorkflowTransition"
            from="node1"
            to="node2">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node1_x0023_node2>
        <node2_x0023_node4
            jcr:primaryType="cq:WorkflowTransition"
            from="node2"
            rule="function check() {&#xd;&#xa;    var value = false;&#xd;&#xa;    var densityDecision = &quot;DENSITY_DECISION&quot;;&#xd;&#xa;    try {&#xd;&#xa;        log.debug(&quot;---------- Executing: Inline Ecma Script for 1000 Density EPS Branch ----------&quot;);&#xd;&#xa;        var metaData = workflowData.getMetaDataMap();&#xd;&#xa;        var mdIter = metaData.keySet().iterator();&#xd;&#xa;&#xd;&#xa;        while (mdIter.hasNext()) {&#xd;&#xa;            var key = mdIter.next();&#xd;&#xa;            log.debug(&quot;Key: &quot; + key + &quot;\\tValue: &quot; + metaData.get(key));&#xd;&#xa;        }//while&#xd;&#xa;&#xd;&#xa;        log.debug(&quot;-----&quot;);&#xd;&#xa;&#xd;&#xa;        if (metaData.get(densityDecision) == &quot;1000&quot;) {&#xd;&#xa;            log.debug(&quot;Value was set to 'true'&quot;);&#xd;&#xa;            value = true;&#xd;&#xa;        }//if&#xd;&#xa;&#xd;&#xa;        log.debug(&quot;-----&quot;);&#xd;&#xa;    }//try&#xd;&#xa;    catch (e) {&#xd;&#xa;        log.error(&quot;Error!\\n&quot; + e.message);&#xd;&#xa;    }//catch&#xd;&#xa;&#xd;&#xa;    if (value == true) {&#xd;&#xa;        log.debug(&quot;The asset should use the 1000 Density EPS branch.&quot;);&#xd;&#xa;    } else {&#xd;&#xa;        log.debug(&quot;The asset should not use the 1000 Density EPS branch.&quot;);&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    log.debug(&quot;--------------------&quot;);&#xd;&#xa;    &#xd;&#xa;    return value;&#xd;&#xa;}"
            to="node4">
            <metaData
                jcr:primaryType="nt:unstructured"
                isDefault="true"/>
        </node2_x0023_node4>
        <node4_x0023_node5
            jcr:primaryType="cq:WorkflowTransition"
            from="node4"
            rule=""
            to="node5">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node4_x0023_node5>
        <node5_x0023_node3
            jcr:primaryType="cq:WorkflowTransition"
            from="node5"
            to="node3">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node5_x0023_node3>
        <node2_x0023_node6
            jcr:primaryType="cq:WorkflowTransition"
            from="node2"
            rule="function check() {&#xd;&#xa;    var value = false;&#xd;&#xa;    var densityDecision = &quot;DENSITY_DECISION&quot;;&#xd;&#xa;    try {&#xd;&#xa;        log.debug(&quot;---------- Executing: Inline Ecma Script for 300 Density EPS Branch ----------&quot;);&#xd;&#xa;        var metaData = workflowData.getMetaDataMap();&#xd;&#xa;        var mdIter = metaData.keySet().iterator();&#xd;&#xa;&#xd;&#xa;        while (mdIter.hasNext()) {&#xd;&#xa;            var key = mdIter.next();&#xd;&#xa;            log.debug(&quot;Key: &quot; + key + &quot;\\tValue: &quot; + metaData.get(key));&#xd;&#xa;        }//while&#xd;&#xa;&#xd;&#xa;        log.debug(&quot;-----&quot;);&#xd;&#xa;&#xd;&#xa;        if (metaData.get(densityDecision) == &quot;300&quot;) {&#xd;&#xa;            log.debug(&quot;Value was set to 'true'&quot;);&#xd;&#xa;            value = true;&#xd;&#xa;        }//if&#xd;&#xa;&#xd;&#xa;        log.debug(&quot;-----&quot;);&#xd;&#xa;    }//try&#xd;&#xa;    catch (e) {&#xd;&#xa;        log.error(&quot;Error!\\n&quot; + e.message);&#xd;&#xa;    }//catch&#xd;&#xa;&#xd;&#xa;    if (value == true) {&#xd;&#xa;        log.debug(&quot;The asset should use the 300 Density EPS branch.&quot;);&#xd;&#xa;    } else {&#xd;&#xa;        log.debug(&quot;The asset should not use the 300 Density EPS branch.&quot;);&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    log.debug(&quot;--------------------&quot;);&#xd;&#xa;    &#xd;&#xa;    return value;&#xd;&#xa;}"
            to="node6">
            <metaData
                jcr:primaryType="nt:unstructured"
                isDefault="false"/>
        </node2_x0023_node6>
        <node6_x0023_node7
            jcr:primaryType="cq:WorkflowTransition"
            from="node6"
            rule=""
            to="node7">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node6_x0023_node7>
        <node7_x0023_node3
            jcr:primaryType="cq:WorkflowTransition"
            from="node7"
            to="node3">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node7_x0023_node3>
        <node2_x0023_node8
            jcr:primaryType="cq:WorkflowTransition"
            from="node2"
            rule="function check() {&#xd;&#xa;return true; }"
            to="node8">
            <metaData
                jcr:primaryType="nt:unstructured"
                isDefault="false"/>
        </node2_x0023_node8>
        <node8_x0023_node3
            jcr:primaryType="cq:WorkflowTransition"
            from="node8"
            to="node3">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node8_x0023_node3>
        <node3_x0023_node9
            jcr:primaryType="cq:WorkflowTransition"
            from="node3"
            to="node9">
            <metaData jcr:primaryType="nt:unstructured"/>
        </node3_x0023_node9>
    </transitions>
</jcr:root>
